[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Maps in R",
    "section": "",
    "text": "Overview\n\n\n\n\n\n\nLearning Goals\n\n\n\nAfter completing this chapter, learners should be able to:\n\nApply popular mapping workflows to create maps with spatial data\nAssess which workflow works best in different situations\nApply cartographic best practices to a map composition in R\n\n\n\n\nWorkshop Description\nIn this workshop, participants will learn how to use several options for composing maps in R.\n\n\nSoftware & Data\nTo fully participate in this workshop, learners will need to attend to the following before the workshop:\n\nDownload and install R\nDownload and install RStudio\nDownload the workshop data and, unzip it, and store it in a location they can find such as a folder dedicated to this workshop (we do not recommend leaving it in your Downloads folder). This is the same data we use in the Cartography for Academic Publications Workshop.\n\n\n\nPrerequisites\nFor the best experience, we recommend learners have the following skills before taking this workshop:\n\nan introductory understanding of programming in R (for example, you are familiar with how to load libraries, load common data formats like a CSV, and are comfortable running basic commands). See DataLab’s R Basics Workshop for help.\nan introductory understanding of spatial data (for example, you are familiar with the difference between raster and vector data). See DataLab’s Spatial Data Formats Workshop for help.\n(recommended) review the concepts (first section) of DataLab’s Cartography for Academic Publications Workshop",
    "crumbs": [
      "Overview"
    ]
  },
  {
    "objectID": "chapters/Introduction.html",
    "href": "chapters/Introduction.html",
    "title": "1  Introduction",
    "section": "",
    "text": "1.1 Data Set\nR is probably best used for cleaning and analyzing spatial data. Making good quality maps, however, takes a different set of skills.\nIf you haven’t already, download the workshop data from the online repository. If you downloaded a .zip file, unzip the data to a folder you can easily find.\nThe data we have to work with today is:\nGeopackage (.gpkg) is a single file, open vector format. We’re using it today because it’s one file per dataset (unlike Shapefile), which makes data management so much easier. See the README.txt file that comes with the data download for more details and sources of the data.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "chapters/Introduction.html#data-set",
    "href": "chapters/Introduction.html#data-set",
    "title": "1  Introduction",
    "section": "",
    "text": "Lake Monsters - LakeMonsters.gpkg - locations of lake monsters; global distribution\nLakes - Lakes_GreatLakes-Area.gpkg - a clip of the Natural Earth Data lakes dataset for the Great Lakes and areas adjacent\nStates - US_CAN_Admin1.gpkg - a clip of the Natural Earth Data states and provinces data for the US and Canada (I’m going to refer to these as “states” for simplicity, but I want to acknowledge that this includes Canadian provinces as well.)\n\n\n\n1.1.1 Data Processing\nWe’ll be working with an international dataset of locations of lake monsters, the most famous of which is arguably Nessie who supposedly lives in Loch Ness in Scotland. This dataset was assembled from Wikipedia’s List of Lake Monsters. The lake names were geocoded (you can find the R script that I wrote to process the data in the r_scripts folder of this repo, corrected, then exported to a geopackage file. Why did I process this data for you? It took a few hours to do and requires skills we are not focusing on in this workshop.\n\n\n1.1.2 Recommended File Structure\nThis is the folder structure this workshop will assume you have:\nworkshop_maps_in_r/\n└── data/\n └── LakeMonsters.gpkg\n \n └── Lakes_GreatLakes-Area.gpkg  \n \n └── README.txt\n \n └── US_CAN_Admin1.gpkg  \n└── output/",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "chapters/Introduction.html#map-details",
    "href": "chapters/Introduction.html#map-details",
    "title": "1  Introduction",
    "section": "1.2 Map Details",
    "text": "1.2 Map Details\nLet’s pretend we want to a map for a journal article about the underpinnings of the distribution of cryptozoology sightings in the northeastern US and southeastern Canada, focusing on lake monsters, creatures reported to live in lakes that are mainly known from folklore and typically take on the the shape of extinct or extraordinarlily large living reptiles. You want your readers to understand the relationship between the monster locations and also their location on the planet. In our imaginary scenario, we plan to submit our paper to one of the Nature journals.\nWhat’s the story? What should readers learn from this map? What data do you need to tell that story effectively?\nThe story I plan to tell is: where are these monsters reported to live in the US Great Lakes area? What are their names? For reference, what lakes and states or provinces are they in? The story you want to tell might be different, so feel free to make adjustments as needed.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "chapters/Introduction.html#load-spatial-data",
    "href": "chapters/Introduction.html#load-spatial-data",
    "title": "1  Introduction",
    "section": "1.3 Load Spatial Data",
    "text": "1.3 Load Spatial Data\nOpen RStudio and create a new script file. Save it in your folder for this workshop.\nSet your working directory to your workshop folder\n\n    # set your working directory\n    \n    setwd(\"path/to/your/workshop/folder/workshop_maps_in_r\")\n\nLoad the libraries that we will need. If you have not installed these packages yet, you can do so with the command install.packages(\"PackageName\")\n\n    # load libraries\n    \n    library(sf)   # for working with spatial data\n\nLet’s load the data we’ll need.\n\n    # read spatial data\n    \n    monsters &lt;- st_read(\"data/LakeMonsters.gpkg\")\n\nReading layer `LakeMonsters' from data source \n  `C:\\Users\\mmtobias\\Documents\\GitHub\\workshop_maps_in_R\\data\\LakeMonsters.gpkg' \n  using driver `GPKG'\nSimple feature collection with 55 features and 9 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -123.4696 ymin: -41.00612 xmax: 144.3105 ymax: 65.35767\nGeodetic CRS:  WGS 84\n\n    lakes &lt;- st_read(\"data/Lakes_GreatLakes-Area.gpkg\")\n\nReading layer `Lakes_GreatLakes-Area' from data source \n  `C:\\Users\\mmtobias\\Documents\\GitHub\\workshop_maps_in_R\\data\\Lakes_GreatLakes-Area.gpkg' \n  using driver `GPKG'\nSimple feature collection with 110 features and 10 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -101.2215 ymin: 35.93167 xmax: -64.94982 ymax: 54.41538\nGeodetic CRS:  WGS 84\n\n    states &lt;- st_read(\"data/US_CAN_Admin1.gpkg\")\n\nReading layer `US_CAN_Admin1' from data source \n  `C:\\Users\\mmtobias\\Documents\\GitHub\\workshop_maps_in_R\\data\\US_CAN_Admin1.gpkg' \n  using driver `GPKG'\nSimple feature collection with 64 features and 83 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -178.1945 ymin: 18.96391 xmax: -52.65365 ymax: 83.11611\nGeodetic CRS:  WGS 84",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "chapters/Base_R.html",
    "href": "chapters/Base_R.html",
    "title": "2  Base R",
    "section": "",
    "text": "R comes with tools to create basic graphs like scatter plots. Many spatial data packages extend these tools to work with spatial data, allowing us to use the plot() function to visualize spatial data in map form. This is often a quick and convenient way to visualize your data to check results.\nIt seems pretty intuitive, but let’s look at what happens if we use the plot command to plot our monsters data:\n\n    plot(monsters)\n\n\n\n\n\n\n\n\nWhoops! What happened? If we don’t specify which column in the attribute table to plot, plot() tries to plot all of them sequentially. If you have a large dataset, this can take a while and it’s almost never what we actually want.\nLet’s just plot the shapes without any data. We can do this by specifying that we want to plot the geometry column. In this case, it’s called “geom”.\n\n    #plot(monsters$geom)  #this option also works in this situation\n  plot(monsters[\"geom\"])\n\n\n\n\n\n\n\n\nLet’s plot them by marker type:\n\n    plot(monsters[\"marker\"])",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Base R</span>"
    ]
  },
  {
    "objectID": "chapters/Additional_Resources.html",
    "href": "chapters/Additional_Resources.html",
    "title": "3  Additional Resources",
    "section": "",
    "text": "3.1 Working with Spatial Data\nBelow are some other materials we think you might find helpful either as a rereference or as a tool to learn more about this topic.\nDataLab’s Cartography for Academic Publications Workshop\nDataLab’s Spatial Data Formats Workshop\nmaptimeDavis - a welcoming community of practice focused on spatial data",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Additional Resources</span>"
    ]
  },
  {
    "objectID": "chapters/Additional_Resources.html#learning-using-r",
    "href": "chapters/Additional_Resources.html#learning-using-r",
    "title": "3  Additional Resources",
    "section": "3.2 Learning & Using R",
    "text": "3.2 Learning & Using R\nDataLab’s R Basics Workshop\nDavis R Users Group - a welcoming community of practice focused on using the R programming language",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Additional Resources</span>"
    ]
  }
]